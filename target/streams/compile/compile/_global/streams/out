[0m[[0m[0mdebug[0m] [0m[0mAcquiring lock on file /Users/benlamlih/code/BoundlessBeds/project/target/.sbt-compilation-infos/boundlessbeds-compile/.sbt-idea-lock ...[0m
[0m[[0m[31merror[0m] [0m[0m[31m[31m-- Error: /Users/benlamlih/code/BoundlessBeds/src/main/scala/domain/account/AccountRepository.scala:15:86 [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m15 |[0m      query[[35mAccount[0m].filter([36maccount[0m => lazyLift(account.fullName.value) == [31m"Simo"[0m).map(lazyLift(_.fullName.value))[0m
[0m[[0m[31merror[0m] [0m[0m[31m[31m   |[0m      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0ms"==== Tree cannot be parsed to 'Ast' ====[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  (EntityQuery.apply[Account]: EntityQuery[Account])[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  .filter([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m    ([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m        (account: Account) =>[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m          (LazyPlanter[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            .apply[String, Any, Any]([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m              Refined.value[String, Not[Empty]](account.fullName),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m              "da2caf90-9cce-4897-8d86-fcacf142e436"[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            .unquote: String).==("Simo")[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m    )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  .map[String]([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m    (LazyPlanter[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m      .apply[Function1[Account, String], Any, Any]([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m        ((_$1: Account) => Refined.value[String, Not[Empty]](_$1.fullName)),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m        "7a49ae70-d002-4cb0-9480-6145829202ce"[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m      )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m      .unquote: Function1[Account, String])[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m==== Extractors ===[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  Apply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  TypeApply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m    Select([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m      Apply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m        Select([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m          Typed([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            TypeApply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m              Select(Ident("EntityQuery"), "apply"),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m              List(Inferred())[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            Applied(TypeIdent("EntityQuery"), List(Inferred()))[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m          ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m          "filter"[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m        ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m        List([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m          Block([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            List([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m              DefDef([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                "$anonfun",[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                List([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                  TermParamClause(List(ValDef("account", Inferred(), None)))[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                Inferred(),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                Some([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                  Apply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                    Select([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                      Typed([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                        Select([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                          Apply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                            TypeApply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                              Select(Ident("LazyPlanter"), "apply"),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                              List(Inferred(), Inferred(), Inferred())[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                            ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                            List([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                              Apply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                                TypeApply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                                  Select(Ident("Refined"), "value"),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                                  List(Inferred(), Inferred())[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                                ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                                List(Select(Ident("account"), "fullName"))[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                              ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                              Literal([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                                StringConstant([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                                  "da2caf90-9cce-4897-8d86-fcacf142e436"[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                                )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                              )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                            )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                          ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                          "unquote"[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                        ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                        Inferred()[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                      ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                      "=="[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                    ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                    List(Literal(StringConstant("Simo")))[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                  )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m              )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            Closure(Ident("$anonfun"), None)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m          )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m        )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m      ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m      "map"[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m    ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m    List(Inferred())[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  List([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m    Typed([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m      Select([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m        Apply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m          TypeApply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            Select(Ident("LazyPlanter"), "apply"),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            List(Inferred(), Inferred(), Inferred())[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m          ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m          List([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            Block([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m              List([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                DefDef([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                  "$anonfun",[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                  List([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                    TermParamClause(List(ValDef("_$1", Inferred(), None)))[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                  ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                  Inferred(),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                  Some([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                    Apply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                      TypeApply([0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                        Select(Ident("Refined"), "value"),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                        List(Inferred(), Inferred())[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                      ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                      List(Select(Ident("_$1"), "fullName"))[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                    )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                  )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m                )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m              ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m              Closure(Ident("$anonfun"), None)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m            Literal(StringConstant("7a49ae70-d002-4cb0-9480-6145829202ce"))[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m          )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m        ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m        "unquote"[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m      ),[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m      Inferred()[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m    )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  )[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m==== Stacktrace ===[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  java.base/java.lang.Thread.getStackTrace(Thread.java:2514)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  io.getquill.parser.engine.failParse$.apply(failParse.scala:27)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  io.getquill.parser.engine.failParse$.apply(failParse.scala:12)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  io.getquill.parser.engine.Parser.error(Parser.scala:10)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  io.getquill.parser.engine.Parser.error$(Parser.scala:7)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  io.getquill.parser.engine.ParserChain$$anon$1.error(ParserChain.scala:15)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  io.getquill.parser.engine.Parser.apply$$anonfun$1(Parser.scala:9)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  scala.Option.getOrElse(Option.scala:201)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  io.getquill.parser.engine.Parser.apply(Parser.scala:9)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  io.getquill.parser.engine.Parser.apply$(Parser.scala:7)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  io.getquill.parser.engine.ParserChain$$anon$1.apply(ParserChain.scala:15)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  io.getquill.parser.ParserLibrary$ReadyParser.apply(Parser.scala:105)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  io.getquill.context.QuoteMacro$.apply(QuoteMacro.scala:133)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  java.base/java.lang.reflect.Method.invoke(Method.java:578)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.quoted.Interpreter.interpretedStaticMethodCall$$anonfun$1(Interpreter.scala:172)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.quoted.Interpreter.stopIfRuntimeException(Interpreter.scala:229)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.quoted.Interpreter.interpretedStaticMethodCall(Interpreter.scala:172)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.quoted.Interpreter.interpretTree(Interpreter.scala:80)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.transform.Splicer$SpliceInterpreter.interpretTree(Splicer.scala:258)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.quoted.Interpreter.interpretTree$$anonfun$2(Interpreter.scala:99)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.transform.Splicer$.$anonfun$2(Splicer.scala:60)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  scala.Option.fold(Option.scala:263)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.transform.Splicer$.splice(Splicer.scala:60)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.inlines.Inliner.dotty$tools$dotc$inlines$Inliner$$expandMacro(Inliner.scala:1048)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.inlines.Inliner$InlineTyper.typedSplice(Inliner.scala:839)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.typer.Typer.typedUnnamed$1(Typer.scala:3092)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.typer.Typer.typedUnadapted(Typer.scala:3112)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.typer.ReTyper.typedUnadapted(ReTyper.scala:146)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.inlines.Inliner$InlineTyper.typedUnadapted(Inliner.scala:915)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.typer.Typer.typed(Typer.scala:3184)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.typer.Typer.typed(Typer.scala:3188)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.typer.ReTyper.typedTyped(ReTyper.scala:65)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.typer.Typer.typedUnnamed$1(Typer.scala:3053)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.typer.Typer.typedUnadapted(Typer.scala:3112)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.typer.ReTyper.typedUnadapted(ReTyper.scala:146)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.inlines.Inliner$InlineTyper.typedUnadapted(Inliner.scala:915)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.typer.Typer.typed(Typer.scala:3184)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.typer.Typer.typed(Typer.scala:3181)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.typer.Typer.typed(Typer.scala:3188)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.inlines.Inliner.inlined(Inliner.scala:681)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.inlines.Inlines$InlineCall.expand(Inlines.scala:444)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.inlines.Inlines$.inlineCall(Inlines.scala:152)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.transform.Inlining$InliningTreeMap.transform(Inlining.scala:95)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.ast.Trees$Instance$TreeMap.transform(Trees.scala:1567)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.ast.TreeMapWithImplicits.transform(TreeMapWithImplicits.scala:67)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.transform.Inlining$InliningTreeMap.transform(Inlining.scala:89)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.ast.tpd$TreeMapWithPreciseStatContexts.loop$2(tpd.scala:1244)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.ast.tpd$TreeMapWithPreciseStatContexts.transformStats(tpd.scala:1244)[0m
[0m[[0m[31merror[0m] [0m[0m[31m   |[0m  dotty.tools.dotc.ast.tpd$TreeMapWithPreciseStatContexts.transformBlock(tpd.scala:1249)[0m
[0m[[0m[31merror[0m] [0m[0mone error found[0m
[0m[[0m[0mdebug[0m] [0m[0mReleasing lock on file /Users/benlamlih/code/BoundlessBeds/project/target/.sbt-compilation-infos/boundlessbeds-compile/.sbt-idea-lock.[0m
